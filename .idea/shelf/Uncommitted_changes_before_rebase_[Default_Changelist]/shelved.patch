Index: src/main/java/fct/cs/Bill/BillManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fct.cs.Bill;\r\n\r\npublic class BillManager {\r\n    \r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/fct/cs/Bill/BillManager.java b/src/main/java/fct/cs/Bill/BillManager.java
--- a/src/main/java/fct/cs/Bill/BillManager.java	(revision 7a03667f5976ccf468a13a685c783cf454baba82)
+++ b/src/main/java/fct/cs/Bill/BillManager.java	(date 1631641711263)
@@ -1,5 +1,33 @@
 package fct.cs.Bill;
 
+import fct.cs.inventory.StockEntry;
+
+import java.sql.PreparedStatement;
+import java.sql.SQLException;
+
 public class BillManager {
-    
+
+
+
+
+
+
+    public boolean addSingleEntry(StockEntry entry){
+        String addQuery = "insert into INVENTORY (inv_id, book_id, list_price, qty, min_qty) values (?,?,?,?,?)";
+        PreparedStatement preparedStatement = null;
+        int count = 0;
+        try {
+            preparedStatement = conn.prepareStatement(addQuery);
+            preparedStatement.setInt(1,entry.getInv_id());
+            preparedStatement.setInt(2,entry.getBook_id());
+            preparedStatement.setInt(3,entry.getList_price());
+            preparedStatement.setInt(4,entry.getQty());
+            preparedStatement.setInt(5,entry.getMin_qty());
+            count = preparedStatement.executeUpdate();
+        } catch (SQLException e) {
+            e.printStackTrace();
+        }
+
+        return count > 0;
+    }
 }
Index: src/main/java/fct/cs/Bill/SelectCustomerController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fct.cs.Bill;\r\nimport fct.cs.controllers.mainPageController;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.collections.transformation.FilteredList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TableCell;\r\nimport javafx.scene.control.TableColumn;\r\nimport javafx.scene.control.TableView;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.control.TextField ;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.layout.AnchorPane;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.ResourceBundle;\r\n\r\npublic class SelectCustomerController implements Initializable {\r\n\r\n\r\n    @FXML\r\n    private TableView<BillCustomer> customerTable;\r\n\r\n    @FXML\r\n    private TableColumn <BillCustomer,Integer>id;\r\n\r\n    @FXML\r\n    private TableColumn <BillCustomer,String> name;\r\n\r\n    @FXML\r\n    private TableColumn <BillCustomer,String> mobile;\r\n\r\n    @FXML\r\n    private TableColumn <BillCustomer,String>  email;\r\n    @FXML\r\n    private Label screen;\r\n\r\n    private BillingController BillingController;\r\n    private mainPageController mainController;\r\n\r\n    private ObservableList<BillCustomer> customerObservableList = FXCollections.observableArrayList();\r\n\r\n    private CustomerManager CustomerManager;\r\n    private SelectCustomerController thisController = this;\r\n    private BillingController parentController;\r\n    private FilteredList<BillCustomer> customerFilteredList = new FilteredList<>(customerObservableList);\r\n\r\n    @FXML\r\n    private TextField searchCustomer;\r\n\r\n\r\n    @FXML\r\n    private TableColumn SelectCustomer;\r\n\r\n    @FXML\r\n    private AnchorPane rootPane;\r\n\r\n    @Override\r\n    public void initialize(URL location , ResourceBundle resources) {\r\n\r\n        CustomerManager = new CustomerManager();\r\n        setColumns();\r\n        loadDataTable();\r\n\r\n    }\r\n    public void loadDataTable() {\r\n        ArrayList<BillCustomer> CustomerList = CustomerManager.getCustomerList();\r\n        customerTable.setItems(customerObservableList);\r\n        customerObservableList.clear();\r\n\r\n        for (BillCustomer currentCustomer : CustomerList) {\r\n            customerObservableList.add(currentCustomer);\r\n        }\r\n    }\r\n\r\n    private void setColumns(){\r\n\r\n        id.setCellValueFactory(new PropertyValueFactory<>(\"customer_id\"));\r\n        name.setCellValueFactory(new PropertyValueFactory<>(\"customer_name\"));\r\n        mobile.setCellValueFactory(new PropertyValueFactory<>(\"mobile\"));\r\n        email.setCellValueFactory(new PropertyValueFactory<>(\"email\"));\r\n\r\n\r\n        SelectCustomer.setCellFactory((tableColumn) -> {\r\n            TableCell<BillCustomer, Integer> tableCell = new TableCell<>() {\r\n                javafx.scene.image.Image imgSelect = new Image(getClass().getResourceAsStream(\"/images/book.png\"));\r\n                final javafx.scene.control.Button btnSelect = new Button();\r\n//                FontIcon icon3 = new FontIcon(\"antf-book\");\r\n\r\n\r\n                @Override\r\n                protected void updateItem(Integer customer_id, boolean empty) {\r\n                    super.updateItem(customer_id, empty);\r\n\r\n                    if(empty)\r\n                    {\r\n                        this.setText(null);\r\n                        this.setGraphic(null);\r\n                    }\r\n                    else{\r\n\r\n                        btnSelect.setOnAction(e ->{\r\n                                    System.out.println(\"Clicked Select\");\r\n                                    BillCustomer entry = getTableView().getItems().get(getIndex());\r\n                                    parentController.displayCustomerDetails(entry);\r\n                                    parentController.MovetoBooks();\r\n                        });\r\n\r\n\r\n                        btnSelect.setStyle(\"-fx-background-color: \\n\" +\r\n                                \"        #090a0c,\\n\" +\r\n                                \"        linear-gradient(#38424b 0%, #1f2429 20%, #191d22 100%),\\n\" +\r\n                                \"        linear-gradient(#20262b, #191d22),\\n\" +\r\n                                \"        radial-gradient(center 50% 0%, radius 100%, rgba(114,131,148,0.9), rgba(255,255,255,0));\\n\" +\r\n                                \"    -fx-background-radius: 5,4,3,5;\\n\" +\r\n                                \"    -fx-background-insets: 0,1,2,0;\\n\" +\r\n                                \"    -fx-text-fill: white;\\n\" +\r\n                                \"    -fx-effect: dropshadow( three-pass-box , rgba(0,0,0,0.6) , 5, 0.0 , 0 , 1 );\\n\" +\r\n                                \"    -fx-font-family: \\\"Arial\\\";\\n\" +\r\n                                \"    -fx-text-fill: linear-gradient(white, #d0d0d0);\\n\" +\r\n                                \"    -fx-font-size: 12px;\\n\" +\r\n                                \"    -fx-padding: 10 20 10 20;\");\r\n\r\n                        btnSelect.setText(\"Select\");\r\n//                        icon3.setIconColor(Color.RED);\r\n//                        icon3.setIconSize(30);\r\n\r\n//                        ImageView iv = new ImageView();\r\n//                        iv.setImage(imgSelect);\r\n//                        iv.setPreserveRatio(true);\r\n//                        iv.setSmooth(true);\r\n//                        iv.setCache(true);\r\n//                        btnSelect.setGraphic(icon3);\r\n\r\n                        this.setGraphic(btnSelect);\r\n                        this.setAlignment(Pos.CENTER);\r\n\r\n\r\n                    }\r\n\r\n\r\n                }\r\n\r\n            };\r\n            return tableCell;\r\n        });\r\n\r\n\r\n    }\r\n    public void setParentController(BillingController parentController) {\r\n        this.parentController = parentController;\r\n    }\r\n\r\n    @FXML\r\n    private void displayCustomerInBill() throws IOException {\r\n        BillCustomer customer = customerTable.getSelectionModel().getSelectedItem();\r\n        if (customer == null) {\r\n            screen.setText(\"Select Customer\");\r\n        } else {\r\n            String name = customer.getCustomer_name();\r\n            screen.setText(\"name:\" + name);\r\n//            displayCustomerName(name);\r\n\r\n\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    private void sendToBillingScene(String name) throws IOException{\r\n        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/fct/cs/selectItemsForBill.fxml\"));\r\n        Parent root = loader.load();\r\n        BillingController = loader.getController();\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    public void searchTable(String key) {\r\n        System.out.println(\"Searching ...\");\r\n        customerFilteredList.setPredicate(billCustomer-> {\r\n            String filter = key.toLowerCase();\r\n            boolean title_matches = String.valueOf(billCustomer.getCustomer_id()).toLowerCase().contains(filter);\r\n            return title_matches;\r\n        });\r\n    }\r\n\r\n\r\n    @FXML\r\n    void searchCustomer(ActionEvent actionEvent) {\r\n        String key = searchCustomer.getText();\r\n        searchTable(key);\r\n        customerTable.setItems(customerFilteredList);\r\n    }\r\n\r\n    public void switchBilling(ActionEvent action ) throws IOException {\r\n\r\n\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/fct/cs/Bill/SelectCustomerController.java b/src/main/java/fct/cs/Bill/SelectCustomerController.java
--- a/src/main/java/fct/cs/Bill/SelectCustomerController.java	(revision 7a03667f5976ccf468a13a685c783cf454baba82)
+++ b/src/main/java/fct/cs/Bill/SelectCustomerController.java	(date 1631641711255)
@@ -57,7 +57,6 @@
     @FXML
     private TextField searchCustomer;
 
-
     @FXML
     private TableColumn SelectCustomer;
 
@@ -153,9 +152,8 @@
             };
             return tableCell;
         });
-
+    }
 
-    }
     public void setParentController(BillingController parentController) {
         this.parentController = parentController;
     }
